using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using UnityEngine;
using UnityEngine.InputSystem;

public class BattleManager : MonoBehaviour, IManager
{
    /*
     * This class is in charge of the entire battle system.
     * Um. We'll figure this out later...
     * This will be fun :) -Sheep
     */

    public GameState gameState;
    public DungeonManager dungeonManager;
    public BattleGUI GUI;


    public delegate void uiUpdate(string[] stats);
    public static event uiUpdate uiBattleUpdate;
    // take data from runStats for player information?
    // public RunStats runStats;
    
    /*
     * Battle State
     */

    bool battleActive = false;
    private MapTile mapTile;
    private EnemyType enemyType;

    // audio
    public AudioSource deathSound;

    /*
     * Battle Requesting
     */

    void Awake()
    {
        MapTile.StartBattle += EngageBattle;
        deathSound = GetComponent<AudioSource>();
    }

    void EngageBattle(MapTile mapTile, EnemyType enemyType)
    {
        // 'this' keyword for clarity when passing different variables of same name around
        this.mapTile = mapTile;
        this.enemyType = enemyType;
        GameObject enemy = this.mapTile.referenceEnemyObject();
        enemy.GetComponentInChildren<MeshRenderer>().material.color = Color.cyan;
        gameState.RequestManager(this);
    }

    /*
     * Battle Input
     */
    private void Update()
    {
        if (!battleActive) return;

        // use the string array generated by getBattleText to update the UI in BattleGUI
        
        uiBattleUpdate(getBattleText());
        if (Input.GetKeyDown(KeyCode.Space))
        {
            // play enemy death sound
            deathSound.Play();
            mapTile.ClearEnemy();
            gameState.RequestManager(dungeonManager);
        }
    }

    public string[] getBattleText(){
        // returns an array of strings, each one associated to specific data to update in BattleGUI
        // battleText = ["player hp" "player def" "enemy hp" "enemy def" OPTIONAL"{placeholder for abilities}"]
        string[] battleText = {"hp: 9", "defence: 10", "enemy hp: 5", "enemy defence: 5", "\t\t\t  Your turn! \n \t\t    (Select a Move)"};
        return battleText;
    }
    /*
     * IManager Transitions
     */

    public void StartManager()
    {
        battleActive = true;
        GUI.EnableGUI();
    }

    public void StopManager()
    {
        battleActive = false;
        GUI.DisableGUI();
    }

    public ManagerType GetManagerType()
    {
        return ManagerType.BATTLE;
    }

}
